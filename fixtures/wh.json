{
  "firmware_module_type": [
    {
      "_id": "pwm_actuator_demo",
      "repository": {
        "type": "git",
        "url": "https://github.com/gordonbrander/openag_pwm_actuator.git"
      },
      "header_file": "openag_pwm_actuator.h",
      "class_name": "PwmActuator",
      "description": "Driver for an actuator that can take any value between 0 and 1",
      "arguments": [
        {
          "name": "pin",
          "type": "int"
        },
        {
          "name": "is_active_low",
          "type": "bool",
          "default": false
        },
        {
          "name": "threshold",
          "type": "float",
          "default": 0,
          "description": "Command threshold at which the actuator turns on"
        }
      ],
      "inputs": {
        "cmd": {
          "type": "std_msgs/Float32"
        }
      },
      "dependencies": [
        {"type": "git", "url": "https://github.com/OpenAgInitiative/openag_firmware_module.git"}
      ]
    },
    {
      "_id": "binary_actuator_demo",
      "repository": {
        "type": "git",
        "url": "https://github.com/gordonbrander/openag_binary_actuator.git"
      },
      "header_file": "openag_binary_actuator.h",
      "class_name": "BinaryActuator",
      "description": "Driver for an actuator that can only be set ot binary values",
      "arguments": [
        {
          "name": "pin",
          "type": "int"
        },
        {
          "name": "is_active_low",
          "type": "bool",
          "default": false
        }
      ],
      "inputs": {
        "cmd": {
          "type": "std_msgs/Bool"
        }
      },
      "dependencies": [
        {"type": "git", "url": "https://github.com/OpenAgInitiative/openag_firmware_module.git"}
      ]
    }
  ],
  "firmware_module": [
    {
      "_id": "red_light_1",
      "arguments": [3],
      "environment": "environment_1",
      "type": "pwm_actuator_demo"
    },
    {
      "_id": "blue_light_1",
      "arguments": [4],
      "environment": "environment_1",
      "type": "pwm_actuator_demo"
    },
    {
      "_id": "white_light_1",
      "arguments": [5],
      "environment": "environment_1",
      "type": "pwm_actuator_demo"
    },
    {
      "_id": "pump_1",
      "arguments": [37, true],
      "environment": "environment_1",
      "type": "binary_actuator_demo"
    },
    {
      "_id": "pump_2",
      "arguments": [35, true],
      "environment": "environment_1",
      "type": "binary_actuator_demo"
    },
    {
      "_id": "pump_3",
      "arguments": [33, true],
      "environment": "environment_1",
      "type": "binary_actuator_demo"
    },
    {
      "_id": "pump_4",
      "arguments": [31, true],
      "environment": "environment_1",
      "type": "binary_actuator_demo"
    },
    {
      "_id": "pump_5",
      "arguments": [29, true],
      "environment": "environment_1",
      "type": "binary_actuator_demo"
    },
    {
      "_id": "humidifier",
      "arguments": [27, true],
      "environment": "environment_1",
      "type": "binary_actuator_demo"
    },
    {
      "_id": "atlas_ec_1",
      "environment": "environment_1",
      "type": "atlas_ec"
    },
    {
      "_id": "atlas_ph_1",
      "environment": "environment_1",
      "type": "atlas_ph"
    },
    {
      "_id": "mhz16_1",
      "environment": "environment_1",
      "type": "mhz16"
    },
    {
      "_id": "ds18b20_1",
      "type": "ds18b20",
      "environment": "environment_1",
      "arguments": [6],
      "outputs": {
        "temperature": {"variable": "water_temperature"}
      }
    }
  ]
}
